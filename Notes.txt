Git or VCS Version Control System

Historical Copies

most primitive form of version control, keeping historical copies.
These copies let you see what the project was like before, and go back to that version if you end up deciding that the latest changes were wrong. 
They also let you see the progress of the changes over time, and maybe even help you understand why a change was made. We say that this is primitive because it's very
manual and not very detailed. First, you need to remember to make the copy. Second, you usually make a copy of the whole thing, even if you're only changing one small part.

Differences in files

--> diff filename filename
TO get the difference between two files line by line.

--> diff -u filename filename
To get the differences between 2 files line by line with "+" "-" symbols to highlight changes.

--> diff -u old_file new_file > change.diff
To get the differences between old_file and new_file and save those changes to change.diff 

**The wdiff command highlights the words that changed in a file by color, in addition to working line by line.

#############################################################################################

Applying changes to files.

--> patch afterchange_file < applychangesfrom_file
To apply changes from applychangesfrom_file to afterchange_file


A VCS even provides a mechanism to allow the author of a commit to record why the change was made, including what bugs, tickets or issues were fixed by the change. 

###############################################################
First Step with github 

Git keeps record about who made changes to the file and for that git needs to know, "WHO YOU ARE?" and to set ur identity in git these commands are followed.

--> git config --global user.email "abc@gmail.com"
--> git config --global user.name "Name"

Make Directory -- mkdir DirName
Change to directory -- cd DirName

----- To initialize git to a directory-----
Change current directory to directory you want to initialize for git by using "cd" command
--> git init    [Enter this command to initialize to that directory]

-- To see the files in directory initilaized for git --

--> ls -la  command which lists files that start with a dot
--> ls -l .git  

*****
>The git directory contains all the changes and their history and the working tree contains the current versions of the files.
>The staging area which is also known as the index is a file maintained by Git that contains all of the information 
about what files and changes are going to go into your next command.
*****

To Copy a file
--> cp locationWITHfilename (make sure your current directory is the one where you want to copy it.)



